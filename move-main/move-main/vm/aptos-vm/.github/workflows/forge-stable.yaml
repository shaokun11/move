# Continuously run stable forge tests against the latest main branch.
# TODO: for workflows triggered by a cron, we should only run it on the base repo, not on forks
name: Continuous Forge Tests - Stable

permissions:
  issues: write
  pull-requests: write

on:
  # Allow triggering manually
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        required: false
        type: string
        description: The docker image tag to test. This may be a git SHA1, or a tag like "<branch>_<git SHA1>". If not specified, Forge will find the latest build based on the git history (starting from GIT_SHA input)
      GIT_SHA:
        required: false
        type: string
        description: The git SHA1 to checkout. This affects the Forge test runner that is used. If not specified, the latest main will be used
  schedule:
    - cron: "0 9 * * *" # the main branch cadence
    - cron: "0 21 * * *" # the QS "quorum-store" branch cadence
  pull_request:
    paths:
      - ".github/workflows/forge-stable.yaml"

env:
  AWS_ACCOUNT_NUM: ${{ secrets.ENV_ECR_AWS_ACCOUNT_NUM }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IMAGE_TAG: ${{ inputs.IMAGE_TAG }} # this is only used for workflow_dispatch, otherwise defaults to empty
  AWS_REGION: us-west-2

jobs:
  # This job determines the image tag and branch to test, and passes them to the other jobs
  # NOTE: this may be better as a separate workflow as the logic is quite complex but generalizable
  determine-test-metadata:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.determine-test-image-tag.outputs.IMAGE_TAG }}
      BRANCH: ${{ steps.determine-test-branch.outputs.BRANCH }}
    steps:
      - name: Determine branch based on cadence
        id: determine-test-branch
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            if [[ "${{ github.event.schedule }}" == "0 9 * * *" ]]; then
              echo "Branch: main"
              echo "BRANCH=main" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.schedule }}" == "0 21 * * *" ]]; then
              echo "Branch: quorum-store"
              echo "BRANCH=quorum-store" >> $GITHUB_OUTPUT
            else
              echo "Unknown schedule: ${{ github.event.schedule }}"
              exit 1
            fi
          else
            echo "Using GIT_SHA"
            # on workflow_dispatch, this will simply use the inputs.GIT_SHA given (or the default)
            # on pull_request, this will default to null and the following "checkout" step will use the PR's base branch
            echo "BRANCH=${{ inputs.GIT_SHA }}" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3
        with:
          ref: ${{ steps.determine-test-branch.outputs.BRANCH }}
          fetch-depth: 0

      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # pin@v4

      - name: Install python deps
        run: pip3 install click==8.1.3 psutil==5.9.1

      - name: Determine image tag
        id: determine-test-image-tag
        # forge relies on the default and failpoints variants
        run: python3 testsuite/find_latest_image.py --variant failpoints --variant performance

  run-forge-three-region:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-three-region
      FORGE_RUNNER_DURATION_SECS: 1800
      FORGE_TEST_SUITE: three_region_simulation
      POST_TO_SLACK: true

  run-forge-three-region-different-node-speed:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-three-region-with-different-node-speed
      FORGE_RUNNER_DURATION_SECS: 3600
      FORGE_TEST_SUITE: three_region_simulation_with_different_node_speed
      FORGE_ENABLE_FAILPOINTS: true
      POST_TO_SLACK: true

  run-forge-consensus-stress-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-consensus-stress-test
      FORGE_RUNNER_DURATION_SECS: 2400
      FORGE_TEST_SUITE: consensus_stress_test
      POST_TO_SLACK: true

  run-forge-account-creation-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-account-creation-test
      FORGE_RUNNER_DURATION_SECS: 900
      FORGE_TEST_SUITE: account_creation
      POST_TO_SLACK: true

  run-forge-fullnode-reboot-stress-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-fullnode-reboot-stress
      FORGE_RUNNER_DURATION_SECS: 1800
      FORGE_TEST_SUITE: fullnode_reboot_stress_test
      POST_TO_SLACK: true

  run-forge-state-sync-failures-catching-up-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-state-sync-failures-catching-up-test
      FORGE_RUNNER_DURATION_SECS: 900
      FORGE_TEST_SUITE: state_sync_failures_catching_up
      FORGE_ENABLE_FAILPOINTS: true
      POST_TO_SLACK: true

  run-forge-state-sync-perf-fullnode-apply-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-state-sync-perf-fullnode-apply
      FORGE_RUNNER_DURATION_SECS: 2400
      FORGE_TEST_SUITE: state_sync_perf_fullnodes_apply_outputs
      POST_TO_SLACK: true

  run-forge-performance-test:
    if: ${{ github.event_name != 'pull_request' }}
    needs: determine-test-metadata
    uses: aptos-labs/aptos-core/.github/workflows/workflow-run-forge.yaml@main
    secrets: inherit
    with:
      IMAGE_TAG: ${{ needs.determine-test-metadata.outputs.IMAGE_TAG }}
      FORGE_NAMESPACE: forge-performance
      FORGE_RUNNER_DURATION_SECS: 7200
      FORGE_TEST_SUITE: land_blocking
      FORGE_ENABLE_PERFORMANCE: true
      POST_TO_SLACK: true
